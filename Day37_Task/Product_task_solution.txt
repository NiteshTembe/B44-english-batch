Find all the information about each products
> db.product.find().pretty();


Find the product price which are between 400 to 800
> db.product.find({ product_price: { $gt: 400 , $lt: 800 } }).pretty();


Find the product price which are not between 400 to 600
> db.product.find( { $or: [ { product_price: { $lte: 400 } }, { product_price: { $gte: 600 } } ] } ).pretty();


List the four product which are grater than 500 in price 
> db.product.find( { product_price : { $gte : 500 } } ).limit( 4 ).pretty();


Find the product name and product material of each products
> db.product.find( {},{ _id : 0 , product_name : 1, product_material : 1}).pretty();


Find the product with a row id of 10
> db.product.find({id: "10"}).pretty();


Find only the product name and product material
> db.product.find({id: "10"},{ _id : 0 , product_name : 1, product_material : 1}).pretty();


Find all products which contain the value of soft in product material 
> db.product.find({product_material: "Soft"}).pretty();


Find products which contain product color indigo  and product price 492.00
use following command to get products which contains either color indigo or product price 492.00
> db.product.find({$or : [{product_color: "indigo"},{product_price:492.00}]}).pretty();
use following command to get products which contains both color indigo and product price 492.00
> db.product.find({$and : [{product_color: "indigo"},{product_price:492.00}]}).pretty();



Delete the products which product price value are same

db.product.aggregate([
    {"$group" : { "_id": "$product_price", "count": { "$sum": 1 } } },
    {"$match": {"_id" :{ "$ne" : null } , "count" : {"$gt": 1} } }, 
    {"$project": {"product_price" : "$_id", "_id" : 0} }
]).forEach(function(doc) {
    db.product.deleteMany({ "product_price": doc.product_price });
  });